#######
Exercise: Managing Users and Groups

1. Start two LinuxAcademy.com lab servers. This exercise will refer to the servers as server1 and server2.

2. Working as the user "user", on server1 generate a new RSA public and private key with a pass phrase of your choosing.

[root@server1 ~]# ssh-keygen 

3. Copy the SSH key to server2.

[root@server1 ~]# ssh-copy-id user@52.25.4.176

4. Remotely connect to server2 from server1 using the SSH keys.

[root@server1 ~]# ssh user@52.25.4.176

Enter passphrase for key '/user/.ssh/id_rsa': 

5. On server1, issue the correct commands to temporarily store the pass phrase in your current shell session. This will prevent you from having to enter the pass phrase each time you connect to server2.

[root@server1 ~]# ssh-agent bash
[root@server1 ~]# ssh-add

Enter passphrase for /user/.ssh/id_rsa: 

Identity added: /root/.ssh/id_rsa (/user/.ssh/id_rsa) 

[root@server1 ~]# ssh user@52.25.4.176

6. Issue a remote command to create a directory named "test" on server2.

[root@server1 ~]# ssh user@52.25.4.176 mkdir test


#######
Exercise: Working With SELinux Context, Booleans, and Troubleshooting

1. Download and install the apache web server.

[root@localhost ~]# yum install httpd

2. Modify the /etc/httpd/conf/httpd.conf configuration file and replace /var/www/html with /content. Create the /content directory and then create a static index.html file in the /content directory that says "this is my website".

[root@localhost ~]# sed -i 's/\/var\/www\/html/\/content/' /etc/httpd/conf/httpd.conf
[root@localhost ~]# vim /etc/httpd/conf/httpd.conf then find and replace /var/www/html with /content
[root@localhost ~]# mkdir /content
[root@localhost ~]# echo "this is my website" > /content/index.html

3. Modify the /etc/httpd/conf.d/userdir.conf directory and replace UserDir disabled with UserDir public_html.

[root@localhost ~]# sed -i 's/disabled/public_html/' /etc/httpd/conf.d/userdir.conf 
or 
Manually modify the /etc/httpd/conf.d/userdir.conf

4. Create the public_html directory in the /home/user directory. Echo a simple html file with the text "this is my website" into the /home/user/public_html/index.html file.

[root@localhost ~]# mkdir /home/user/public_html
[root@localhost ~]# echo "this is my website" > /home/user/public_html/index.html

5. Set the user owner and group owner of the /home/user directory to "user". Set permissions to 711 /home/user and 755 recursively on /home/user/public_html.

[root@localhost ~]# chmod 711 /home/user
[root@localhost ~]# chmod 755 -R /home/user/public_html
[root@localhost ~]# chown user:user -R /home/user/public_html

6. Restart the httpd service.

[root@localhost ~]# systemctl restart httpd

7.  Install the correct packages for troubleshooting SELinux policy denials and violations.

[root@localhost ~]# yum install -y setroubleshoot-server

8. Copy your IP address and attempt to open the index.html file in your browser. Troubleshoot using the proper SELinux troubleshooting package what may be causing the issue. Once you have determined the issue, implement a solution to fix the policy violation.

[root@localhost ~]# sealert -a /var/log/audit/audit.log 
[root@localhost ~]# semanage fcontext -a -t httpd_sys_content_t '/content(/.*)?'
[root@localhost ~]# restorecon -Rv /content
restorecon reset /content context unconfined_u:object_r:default_t:s0->unconfined_u:object_r:httpd_sys_content_t:s0
restorecon reset /content/index.html context unconfined_u:object_r:default_t:s0->unconfined_u:object_r:httpd_sys_content_t:s0

9. Attempt to open the user "user"'s homedir via the web browser (Example: http://tcox1.mylabserver.com/~user/). If permission is denied, troubleshoot the issue using the proper SELinux troubleshooting tools. Once the issue is discovered, implement a persistent fix and try again.

[root@localhost ~]# sealert -a /var/log/audit/audit.log
[root@localhost ~]# setsebool -P httpd_enable_homedirs on